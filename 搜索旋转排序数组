题目链接：http://www.lintcode.com/zh-cn/problem/search-in-rotated-sorted-array/

假设有一个排序的按未知的旋转轴旋转的数组(比如，0 1 2 4 5 6 7 可能成为4 5 6 7 0 1 2)。给定一个目标值进行搜索，如果在数组中找到目标值返回数组中的索引位置，否则返回-1。

你可以假设数组中不存在重复的元素。

您在真实的面试中是否遇到过这个题？ Yes
样例
给出[4, 5, 1, 2, 3]和target=1，返回 2

给出[4, 5, 1, 2, 3]和target=0，返回 -1

public class Solution {
    /** 
     *@param A : an integer rotated sorted array
     *@param target :  an integer to be searched
     *return : an integer
     */
    public int search(int[] A, int target) {
        // write your code here
        if(A.length > 0 && search(A, target, 0, A.length-1))
            return pos;
            
        return -1;
    }
    
    private int pos = -1;
    
    private boolean search(int A[], int target, int ld, int rd){
        if(ld > rd) return false;
        if(ld == rd) {
            if(A[ld] == target) {
                pos = rd;
                return true;
            } else {
                return false;
            }
        }
        
        int mid = (ld+rd)/2;
        if(A[mid] == target) {
            pos = mid;
            return true;
        }
        if(A[ld] < A[mid] && A[mid] < A[rd]) {
            if(target < A[mid]) {
                rd = mid-1;
            } else {
                ld = mid+1;
            }
            if(search(A, target, ld, rd)) return true;
        } else if(A[ld] > A[mid] && A[mid] > A[rd]) {
            if(target < A[mid]) {
                ld = mid+1;
            } else {
                rd = mid-1;
            }
            if(search(A, target, ld, rd)) return true;
        } else {
            if(search(A, target, ld, mid)) return true;
            if(search(A, target, mid+1, rd)) return true;
        }
        return false;
    }
}
