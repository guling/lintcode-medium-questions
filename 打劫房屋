题目链接:http://www.lintcode.com/zh-cn/problem/house-robber/

假设你是一个专业的窃贼，准备沿着一条街打劫房屋。每个房子都存放着特定金额的钱。你面临的唯一约束条件是：相邻的房子装着相互联系的防盗系统，且 当相邻的两个房子同一天被打劫时，该系统会自动报警。

给定一个非负整数列表，表示每个房子中存放的钱， 算一算，如果今晚去打劫，你最多可以得到多少钱 在不触动报警装置的情况下。
您在真实的面试中是否遇到过这个题？
样例

给定 [3, 8, 4], 返回 8.


public class Solution {
    /**
     * @param A: An array of non-negative integers.
     * return: The maximum amount of money you can rob tonight
     */
    public long houseRobber(int[] A) {
        // write your code here
        if(A == null || A.length == 0) return 0;
        if(A.length == 1) return (long)A[0];
        if(A.length == 2) return (long)Math.max(A[0], A[1]);
        long[] dp = new long[A.length];
        dp[0] = A[0];
        dp[1] = A[1];
        //前第i个房屋的获得最多金钱 = 最大值（前i-1个房屋获得金钱的最大值[不拿取第i个房屋的金钱]，
        //                              前i-2个房屋获得金钱的最大值+第i个房屋的金钱）
        for(int i=2; i<A.length; ++i) {
            dp[i] = Math.max(dp[i-2]+A[i], dp[i-1]);
        }
        
        return dp[A.length-1];
    }
}

//优化空间
public class Solution {
    /**
     * @param A: An array of non-negative integers.
     * return: The maximum amount of money you can rob tonight
     */
    public long houseRobber(int[] A) {
        // write your code here
        if(A == null || A.length == 0) return 0;
        if(A.length == 1) return (long)A[0];
        if(A.length == 2) return (long)Math.max(A[0], A[1]);
        
        long a1 = A[0], a2 = A[1], ans = 0;
        
        for(int i=2; i<A.length; ++i) {
           ans = Math.max(a1+A[i], a2);
           a1 = a2;
           a2 = ans;
        }
        
        return ans;
    }
}
