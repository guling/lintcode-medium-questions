题目链接：http://www.lintcode.com/zh-cn/problem/longest-consecutive-sequence/
最长连续序列 查看运行结果 

给定一个未排序的整数数组，找出最长连续序列的长度。

样例
给出数组[100, 4, 200, 1, 3, 2]，这个最长的连续序列是 [1, 2, 3, 4]，返回所求长度 4

说明
要求你的算法复杂度为O(n)

class Solution {
public:
    /**
     * @param nums: A list of integers
     * @return an integer
     */
    int longestConsecutive(vector<int> &nums) {
        // write you code here
        
        //方法1:排序之后寻找更为方便
        // if(nums.size() == 0) return 0;
        // sort(nums.begin(), nums.end());
        // int cnt = 1;
        // int ans = 1;
        // for(int i=1; i<nums.size(); ++i)
        //     if(nums[i]-nums[i-1] == 1)
        //         ++cnt;
        //     else if(nums[i] != nums[i-1]){
        //         if(ans < cnt)
        //             ans = cnt;
        //         cnt = 1;
        //     }
        // if(ans < cnt) ans = cnt;
        // return ans;
        
        //方法二：mp<i, j>, 表示前i个数中，连续序列中有i的最长长度为j
        map<int, int>mp;
        int ans = 0;
        for(int i=0; i<nums.size(); ++i){
            if(mp.find(nums[i]) != mp.end()) continue;
            mp[nums[i]] = 0;
            if(mp.find(nums[i]-1) != mp.end())
                mp[nums[i]] += mp[nums[i]-1];
            if(mp.find(nums[i]+1) != mp.end())
                mp[nums[i]] += mp[nums[i]+1];
            
            mp[nums[i]] += 1;
            //将连续序列的两端数字对应的长度值都置成该连续序列的长度
            if(mp.find(nums[i]-1) != mp.end())
                mp[(nums[i]-1)-mp[nums[i]-1]+1] = mp[nums[i]];
            if(mp.find(nums[i]+1) != mp.end())
                mp[(nums[i]+1)+mp[nums[i]+1]-1] = mp[nums[i]];
            
            if(mp[nums[i]] > ans)
                ans = mp[nums[i]];
        }
        return ans;
    }
};
