题目链接：http://www.lintcode.com/zh-cn/problem/maximum-product-subarray/#
乘积最大子序列 查看运行结果 

找出一个序列中乘积最大的连续子序列（至少包含一个数）。

样例
比如, 序列 [2,3,-2,4] 中乘积最大的子序列为 [2,3] ，其乘积为6。

class Solution {
public:
    /**
     * @param nums: a vector of integers
     * @return: an integer
     */
    int maxProduct(vector<int>& nums) {
        // write your code here
        //暴力超时
        // int ans = -0x3f3f3f3f;
        // int n = nums.size();
        // for(int i=0; i<n; ++i)
        //     for(int j=i; j<n; ++j){
        //         int mul = 1;
        //         for(int k=i; k<=j; ++k)
        //             mul *= nums[k];
        //         if(mul > ans)
        //             ans = mul;
        //     }
        // return ans;
        
        int max_val = nums[0];
        int min_val = nums[0];
        int ans = nums[0];
        for(int i=1; i<nums.size(); ++i){
            int tmp_max_val = max(nums[i], max(max_val*nums[i], min_val*nums[i]));
            min_val = min(nums[i], min(max_val*nums[i], min_val*nums[i]));
            max_val = tmp_max_val;
            if(ans < max_val) ans = max_val;
        }
        return ans;
    }
};
