题目链接：http://www.lintcode.com/zh-cn/problem/majority-number-ii/#
主元素 II 查看运行结果 

给定一个整型数组，找到主元素，它在数组中的出现次数严格大于数组元素个数的三分之一。



您在真实的面试中是否遇到过这个题？ Yes
样例
给出数组[1,2,1,2,1,3,3] 返回 1

注意
数组中只有唯一的主元素

挑战
要求时间复杂度为O(n)，空间复杂度为O(1)。

class Solution {
public:
    /**
     * @param nums: A list of integers
     * @return: The majority number occurs more than 1/3.
     */
    int majorityNumber(vector<int> nums) {
        // write your code here
        int m1=0, m2=0, cnt1=0, cnt2=0;
        for(int i=0; i<nums.size(); ++i){
            if(m1 == nums[i]) {
                ++cnt1;
            } else if(m2 == nums[i]) {
                ++cnt2;
            } else if(cnt1==0) {
                m1=nums[i];
                cnt1=1;
            } else if(cnt2==0) {
                m2=nums[i];
                cnt2=1;
            } else {
               --cnt1;
               --cnt2;
            }
        }
        cnt1 = cnt2 = 0;
        for(int i=0; i<nums.size(); ++i)
            if(m1 == nums[i]) ++cnt1;
            else if(m2 == nums[i]) ++cnt2;
        return cnt1>cnt2 ? m1 : m2;
    }
};

