题目链接：http://www.lintcode.com/zh-cn/problem/house-robber/
打劫房屋

假设你是一个专业的窃贼，准备沿着一条街打劫房屋。每个房子都存放着特定金额的钱。你面临的唯一约束条件是：相邻的房子装着相互联系的防盗系统，且 当相邻的两个房子同一天被打劫时，该系统会自动报警。

给定一个非负整数列表，表示每个房子中存放的钱， 算一算，如果今晚去打劫，你最多可以得到多少钱 在不触动报警装置的情况下。

样例
给定 [3, 8, 4], 返回 8.

挑战
O(n) 时间复杂度 且 O(1) 存储。

class Solution {
public:
    /**
     * @param A: An array of non-negative integers.
     * return: The maximum amount of money you can rob tonight
     */
    long long houseRobber(vector<int> A) {
        // write your code here
        int n = A.size();
        long long dp[n][2];
        memset(dp, 0, sizeof(dp));
        dp[0][1] = A[0];
        for(int i=1; i<n; ++i){
            dp[i][1] = dp[i-1][0]+A[i];
            dp[i][0] = max(dp[i-1][1], dp[i-1][0]);
        }
        return max(dp[n-1][0], dp[n-1][1]);
    }
};
