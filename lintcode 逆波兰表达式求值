题目链接：http://www.lintcode.com/zh-cn/problem/evaluate-reverse-polish-notation/
逆波兰表达式求值 查看运行结果 

求逆波兰表达式的值。

在逆波兰表达法中，其有效的运算符号包括 +, -, *, / 。每个运算对象可以是整数，也可以是另一个逆波兰计数表达。

样例
["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6
说明
什么是逆波兰表达式？

http://en.wikipedia.org/wiki/Reverse_Polish_notation

class Solution {
public:
    /**
     * @param tokens The Reverse Polish Notation
     * @return the value
     */
    template<typename out, typename in> 
    out convert(in x){
        stringstream ss;
        ss<<x;
        out y;
        ss>>y;
        return y;
    }
    string cal(string a, string b, char ch){
        int aa = convert<int>(a);
        int bb = convert<int>(b);
        switch(ch) {
            case '*':
                return convert<string>(aa*bb);
                break;
            case '-':
                return convert<string>(aa-bb);
                break;
            case '+':
                return convert<string>(aa+bb);
                break;
            case '/':
                return convert<string>(aa/bb);
                break;
        }
    }
    int evalRPN(vector<string>& tokens) {
        // Write your code here
        stack<string> st;
        for(int i=0; i<tokens.size(); ++i){
            if(tokens[i] == "*" || tokens[i] == "/" || tokens[i] == "+" || tokens[i] == "-"){
                string a = st.top(); st.pop();
                string b = st.top(); st.pop();
                string c = cal(b, a, tokens[i][0]);
                st.push(c);
            } else {
                st.push(tokens[i]);
            }
        }
        return convert<int>(st.top());
    }
};
